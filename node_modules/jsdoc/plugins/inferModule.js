exports.astNodeVisitor = {
    visitNode: function(node, e, parser, currentSourceName) {

        var replacement_string = "";

        // If a replacement string is passed as an argument, store that in
        // replacement_string for later concatenation.
        for(var i = 0; i < process.argv.length; i++) {
            if (process.argv[i] == "-q") {
                replacement_string = process.argv[i + 1];
            }
        }
        
        if (node.comments != undefined) {
            // Get the filename and remove the extension.
            path = currentSourceName.split("/");
            fn = path[path.length - 1];
            fn = fn.replace(/\.[^/.]+$/, "");
         
            // If the comment does not have a module tag, then add one that is
            // the concatenated replacement string and extensionless filename.
            comment = node.comments[0].raw.split("\n");
            if (!/@module/.test(comment[1])) {
                comment.splice(1, 0, " * @module " + replacement_string + fn);
                node.comments[0].raw = comment.join("\n");
            }
        };
    }
}
