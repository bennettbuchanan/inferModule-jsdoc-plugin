var path = require('path');

exports.astNodeVisitor = {
    visitNode: function(node, e, parser, currentSourceName) {

        var rep = [{ 'from': 'lib/foo', 'to': 'bar' },
                   { 'from': 'lib/fin', 'to': 'baz' }];

        if (node.comments != undefined) {
            // Isolate the path relative to the project's root and replace
            var parsedPath = path.parse(currentSourceName);
            var relPath = parsedPath.dir.replace(process.cwd() + '/', '');

            for(var i = 0; i < rep.length; i++) {
                relPath = relPath.replace(rep[i].from, rep[i].to);
            }

            var proper_path = relPath + '/' + parsedPath.name;

            // If the comment does not have a module tag, then add one that is
            // the concatenated replacement string and extensionless filename.
            var comment = node.comments[0].raw.split('\n');
            if (!/@module/.test(comment[1])) {
                comment.splice(1, 0, ' * @module ' + proper_path);
                node.comments[0].raw = comment.join('\n');
            }
        }
    }
};
